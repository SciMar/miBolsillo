
  async create(dto: CreateBudgetDto) {
    const { name, amount } = this.pickNameAndAmount(dto);

    if (!name) throw new BadRequestException('El campo name (o nombre) es obligatorio');
    if (amount === undefined || amount === null) {
      throw new BadRequestException('El campo amount (o monto) es obligatorio');
    }
    if (dto.startDate && dto.endDate && new Date(dto.endDate) < new Date(dto.startDate)) {
      throw new BadRequestException('La fecha de fin debe ser mayor o igual a la fecha de inicio');
    }

    const budget = this.repo.create({
      name,
      amount,
      userId: dto.userId,
      categoryId: dto.categoryId ?? null,
      startDate: dto.startDate ? new Date(dto.startDate) : null,
      endDate: dto.endDate ? new Date(dto.endDate) : null,
    });

    const saved = await this.repo.save(budget);
    return this.toSpanishResponse(saved);
  }
